test app #2 : notes

now that we have nanostore ready and reviewed, we want to ensure : 

- that it does solve the problem it was designed for
- that the usage is as simple as we expect
- that we have a more real world example to test against


We will crete a notes app (maybe in nanostore/tests/apps/notes/)
This app has the following features :
- Notes can be deleted, live, or archived (soft delete)
- Notes can be tagged
- Notes can be pinned
- Notes can be searched


The canonical view, to which the incremental ids are indexed is no searching
and with active items only (status are either live or archived, deleted are
gone)

This is not meant to be a shell app, we can just have the go code to the app,
but I'll use a shell like for  example sake: 



$ note list 

1. How to use nanostore for a notes app [#nanostore, #shell]
2. Why simple IDs matter for shell[#shell, #ux]


$ note archive 1
$ note list
1. Why simple IDs matter for shell[#shell, #ux]

So, on deletion, the id will be re-indexed. Remember that the goal here is to
always display a continuous list of ids, as a users