# Golang CLI Template Configuration for Copier

# Module description for dynamic listing
module_description: "Complete Go CLI application with Cobra, build scripts, and GitHub Actions"

# Template metadata - only process .jinja files
_templates_suffix: ".jinja"
_envops:
  block_start_string: "{%"
  block_end_string: "%}"
  variable_start_string: "{{"
  variable_end_string: "}}"

# Store answers file in .copier directory
_answers_file: ".copier/.copier-answers.go.yml"

# Exclude files that shouldn't be copied to the destination
_exclude:
  - "**/*.bak"
  - ".goreleaser.yml.template"
  - "{% if not use_version_package %}internal{% endif %}"
  - "test-*/"
  - "**/test-*/"

# IMPORTANT: genx uses Python's Copier tool for all heavy lifting.
# DO NOT create templating and renaming code in post-generation tasks!
# All templating should be done through Copier's Jinja2 templates.

# Questions specific to Golang CLI projects
project_name:
  type: str
  help: What is your project name?
  default: "{{ _copier_conf.dst_path | basename | replace('-', ' ') | replace('_', ' ') | title }}"

# For Go projects, we need TWO names:
# 1. binary_name: The name of the executable (can have hyphens)
# 2. go_package_name: The Go package identifier (no hyphens/underscores)
binary_name:
  type: str
  help: What is the binary/tool name? (can include hyphens, e.g., 'my-cool-tool')
  default: "{% if _copier_conf.dst_path | basename == '.' %}my-project{% else %}{{ _copier_conf.dst_path | basename }}{% endif %}"

go_package_name:
  type: str
  help: What is the Go package name? (must be a valid Go identifier, no hyphens)
  default: "{{ binary_name | replace('-', '') | replace('_', '') | lower }}"

github_user:
  type: str
  help: What is your GitHub username?
  default: "arthur-debert"

author_name:
  type: str
  help: What is your full name?
  default: "Arthur Debert"

author_email:
  type: str
  help: What is your email address?
  default: "arthur@debert.xyz"

description:
  type: str
  help: Brief description of your CLI tool
  default: "Description of your CLI tool"

license:
  type: str
  help: What license to use?
  choices:
    - MIT
    - Apache-2.0
    - GPL-3.0
    - BSD-3-Clause
  default: MIT

go_version:
  type: str
  help: Go version to use
  default: "1.23"

year:
  type: int
  help: Copyright year
  default: "{{ 2024 }}"

use_version_package:
  type: bool
  help: Use a dedicated version package (internal/version) instead of main package vars?
  default: true

# IMPORTANT: genx uses Copier for ALL templating work!
# Post-generation tasks should ONLY handle things Copier cannot do.
# DO NOT use post-generation tasks for:
#   - File content generation (use .jinja templates)
#   - Variable substitution (use Jinja2 templating)
#   - Directory renaming (use proper template paths)

_tasks:
  # Only task we really need - file permissions aren't preserved by git
  - command: chmod +x scripts/*
    description: "Making scripts executable"
  
  # Initialize git repository if not already present
  - command: |
      if [ ! -d ".git" ]; then
        echo "🔧 Initializing git repository..."
        git init
        echo "✅ Git repository initialized"
      else
        echo "✅ Git repository already exists"
      fi
    description: "Initialize git repository if needed"
  
  # Verify the generated project works
  - command: |
      echo "🔧 Installing Go dependencies..."
      go mod tidy
      
      echo "🧪 Running tests with gotestsum..."
      if command -v gotestsum >/dev/null 2>&1; then
        gotestsum
      else
        echo "⚠️  gotestsum not found, using go test..."
        go test ./...
      fi
      
      echo "🔨 Building project..."
      ./scripts/build
      
      echo "✅ Verifying binary help command..."
      if ./bin/{{ binary_name }} --help >/dev/null 2>&1; then
        echo "✅ Binary verification passed"
      else
        echo "❌ Binary --help failed"
        exit 1
      fi
      
      echo "🎉 Go project verification completed successfully!"
    description: "Verifying generated Go project works correctly"
